@using CsvImportSiteJS.ViewModels;
@{
	ViewData["Title"] = "Home Page";
}
@model IndexViewModel;
<body>
	<form method="post" asp-controller="Home" asp-action="Index" enctype="multipart/form-data">
		<div class="row">
			<input class="form-control w-75" asp-for="CsvFile" type="file" accept=".csv" placeholder="Select csv file" />
			<button class="btn btn-outline-primary mx-2" style="width: 22%" type="submit">Add rows from file</button>
			<span asp-validation-for="CsvFile" class="text-danger"></span>
		</div>
	</form>
	@if (TempData["error"] != null)
	{
		<div class="alert alert-danger my-3">@TempData["error"]</div>
	}
	@if (TempData["success"] != null)
	{
		<div class="alert alert-success my-3">@TempData["success"]</div>
	}
	<hr />
	<div class="navbar">
		<h4>Employees</h4>
		<div class="d-inline-flex">
			<h6>Show per page:</h6>
			<select id="display-per-page">
				<option value="5" selected>5</option>
				<option value="10">10</option>
				<option value="20">20</option>
			</select>
		</div>
		<div class="d-inline-flex">
			<nav class="pagination-container">
				<button class="pagination-button" id="prev-button" title="Previous page" aria-label="Previous page">
					&lt;
				</button>
				<div class="align-middle" id="pagination-numbers">
				</div>
				<button class="pagination-button" id="next-button" title="Next page" aria-label="Next page">
					&gt;
				</button>
			</nav>
		</div>
		<div class="d-inline-flex">
			<h6>Search by:</h6>
			<select id="searchBy">
				<option value="0">Payroll number</option>
				<option value="1" selected>First name</option>
				<option value="2">Last name</option>
				<option value="9">Email</option>
				<option value="10">Start date</option>
			</select>
		</div>
		<form class="me-0">
			<input placeholder="Search" id="search-in-table">
		</form>
	</div>
	<div class="row d-inline-block">
		<table class="table table-hover table-sm table-fixed" id="Employees">
			<thead>
				<tr>
					<th class="text-truncate">Payroll number</th>
					<th class="text-truncate">First name</th>
					<th class="text-truncate">Surname</th>
					<th class="text-truncate">Date of birth</th>
					<th class="text-truncate">Telephone</th>
					<th class="text-truncate">Mobile</th>
					<th class="text-truncate">Address</th>
					<th class="text-truncate">Address 2</th>
					<th class="text-truncate">Post code</th>
					<th class="text-truncate">email</th>
					<th class="text-truncate">Start date</th>
					<th class="text-truncate">Controls</th>
				</tr>
			</thead>
			<tbody>
				@if (Model.Employees != null && Model.Employees.Count() > 0)
				{
					@foreach (var employee in Model.Employees)
					{
						<tr>
							<td>@employee.Payroll_Number</td>
							<td>@employee.Forenames</td>
							<td>@employee.Surname</td>
							<td>@DateOnly.FromDateTime(employee.Date_of_Birth)</td>
							<td>@employee.Telephone</td>
							<td>@employee.Mobile</td>
							<td class="text-truncate">@employee.Address</td>
							<td>@employee.Address_2</td>
							<td>@employee.Postcode</td>
							<td class="text-truncate">@employee.EMail_Home</td>
							<td>@DateOnly.FromDateTime(employee.Start_Date)</td>
							<td>
								<div class="d-flex flex-row justify-content-start">
									<a class="btn btn-sm" asp-action="Edit" asp-route-id="@employee.Payroll_Number"><i class="bi bi-pencil-square"></i></a>
									<form asp-action="Delete" asp-route-id="@employee.Payroll_Number" method="post">
										@Html.AntiForgeryToken()
										<button type="submit" class="btn btn-sm" onclick="return confirm(&quot;Are you sure you want to delete this record?&quot;)">
											<i class="bi bi-trash3-fill text-danger"></i>
										</button>
									</form>
								</div>
							</td>
						</tr>
					}
				}
				else
				{
					<tr>
						<td colspan="12">There are no records here yet</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

	@section Scripts{

		@{
			<partial name="_ValidationScriptsPartial" />
		}
	}
</body>


